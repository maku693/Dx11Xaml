// WARNING: Please don't edit this file. It was generated by C++/WinRT v1.0.180227.3

#pragma once

WINRT_EXPORT namespace winrt::Dx11Xaml {

struct IMainPage;
struct MainPage;

}

namespace winrt::impl {

template <> struct category<Dx11Xaml::IMainPage>{ using type = interface_category; };
template <> struct category<Dx11Xaml::MainPage>{ using type = class_category; };
template <> struct name<Dx11Xaml::IMainPage>{ static constexpr auto & value{ L"Dx11Xaml.IMainPage" }; };
template <> struct name<Dx11Xaml::MainPage>{ static constexpr auto & value{ L"Dx11Xaml.MainPage" }; };
template <> struct guid<Dx11Xaml::IMainPage>{ static constexpr GUID value{ 0xC49700AC,0xACF5,0x5454,{ 0xA4,0x09,0x55,0xEA,0x64,0x57,0x2D,0x4F } }; };
template <> struct default_interface<Dx11Xaml::MainPage>{ using type = Dx11Xaml::IMainPage; };

template <typename D>
struct consume_Dx11Xaml_IMainPage
{
};
template <> struct consume<Dx11Xaml::IMainPage> { template <typename D> using type = consume_Dx11Xaml_IMainPage<D>; };

template <> struct abi<Dx11Xaml::IMainPage>{ struct type : IInspectable
{
};};

}
