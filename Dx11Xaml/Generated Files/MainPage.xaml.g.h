//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#pragma once


namespace winrt::Dx11Xaml::implementation
{
    using IInspectable = ::winrt::Windows::Foundation::IInspectable;

    template <typename D, typename ... I>
    class MainPageT : public ::winrt::Dx11Xaml::implementation::MainPage_base<D,
        ::winrt::Windows::UI::Xaml::Markup::IComponentConnector,
        ::winrt::Windows::UI::Xaml::Markup::IComponentConnector2,
        I...>
    {
    public:
        void InitializeComponent();
        void Connect(int32_t connectionId, IInspectable const& target);
        ::winrt::Windows::UI::Xaml::Markup::IComponentConnector GetBindingConnector(int32_t connectionId, IInspectable const& target);
        void UnloadObject(::winrt::Windows::UI::Xaml::DependencyObject const& dependencyObject);
        void DisconnectUnloadedObject(int32_t connectionId);

        ::winrt::Windows::UI::Xaml::Controls::SwapChainPanel swapchainPanel()
        {
            return _swapchainPanel;
        }
        void swapchainPanel(::winrt::Windows::UI::Xaml::Controls::SwapChainPanel value)
        {
            _swapchainPanel = value;
        }
        
    private:
        bool _contentLoaded{false};

        ::winrt::Windows::UI::Xaml::Controls::SwapChainPanel _swapchainPanel{nullptr};
    };
}

